const ChatMessage = ({ message }) => {
  const { text, uid, photoURL, displayName } = message;
  const isCurrentUser = uid === auth.currentUser?.uid;
  const [imageLoaded, setImageLoaded] = useState(false);
  const [imageError, setImageError] = useState(false);

  const getValidImageUrl = (url) => {
    if (!url) return '/images/defaultpfp.jpg';
    if (url.startsWith('http')) return url;
    if (url.startsWith('/')) return url;
    return `https://${url}`;
  };

  const handleImageError = (e) => {
    console.error('Error loading profile image:', photoURL);
    setImageError(true);
    e.target.src = '/images/defaultpfp.jpg';
  };

  return (
    <div className={`flex mb-4 ${isCurrentUser ? 'justify-end' : 'justify-start'}`}>
      {!isCurrentUser && (
        <>
          {(!imageLoaded || imageError) && (
            <div className="w-8 h-8 rounded-full mr-2 bg-gray-200 animate-pulse" />
          )}
          <img 
            src={imageError ? '/images/defaultpfp.jpg' : getValidImageUrl(photoURL)}
            className={`w-8 h-8 rounded-full mr-2 object-cover ${imageLoaded ? '' : 'hidden'}`}
            alt="Profile"
            onLoad={() => setImageLoaded(true)}
            onError={handleImageError}
          />
        </>
      )}
      <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${isCurrentUser ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>
        {!isCurrentUser && (
          <p className="text-xs font-semibold text-gray-600">{displayName}</p>
        )}
        <p>{text}</p>
      </div>
      {isCurrentUser && (
        <>
          {(!imageLoaded || imageError) && (
            <div className="w-8 h-8 rounded-full ml-2 bg-gray-200 animate-pulse" />
          )}
          <img 
            src={imageError ? '/images/defaultpfp.jpg' : getValidImageUrl(photoURL)}
            className={`w-8 h-8 rounded-full ml-2 object-cover ${imageLoaded ? '' : 'hidden'}`}
            alt="Profile"
            onLoad={() => setImageLoaded(true)}
            onError={handleImageError}
          />
        </>
      )}
    </div>
  );
};
